{
	"info": {
		"_postman_id": "3f90c12f-2f51-4962-a83f-401b8d7460dc",
		"name": "1220702_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38525104"
	},
	"item": [
		{
			"name": "OperationType",
			"item": [
				{
					"name": "OperationType GetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is an array\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an(\"array\");\r",
									"});\r",
									"\r",
									"pm.test(\"All items have required fields\", function () {\r",
									"    pm.response.json().forEach(item => {\r",
									"        pm.expect(item).to.have.property(\"id\");\r",
									"        pm.expect(item).to.have.property(\"name\");\r",
									"        pm.expect(item).to.have.property(\"requiredStaff\");\r",
									"        pm.expect(item).to.have.property(\"duration\");\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7252/api/operationtype",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7252",
							"path": [
								"api",
								"operationtype"
							]
						}
					},
					"response": []
				},
				{
					"name": "OperationType GetId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect([200, 404]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.test(\"Response has required fields\", function () {\r",
									"        const jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"id\");\r",
									"        pm.expect(jsonData).to.have.property(\"name\");\r",
									"        pm.expect(jsonData).to.have.property(\"requiredStaff\");\r",
									"        pm.expect(jsonData).to.have.property(\"duration\");\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Returns 404 with not found message\", function () {\r",
									"        pm.expect(pm.response.json()).to.have.property(\"message\", \"Operation Type not found\");\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7252/api/operationtype/3414093c-b671-4f50-be2e-467d638adc1f",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7252",
							"path": [
								"api",
								"operationtype",
								"3414093c-b671-4f50-be2e-467d638adc1f"
							]
						}
					},
					"response": []
				},
				{
					"name": "OperationType Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"id\");\r",
									"        pm.expect(jsonData).to.have.property(\"name\",\"New Operation Type\");\r",
									"        pm.expect(jsonData).to.have.property(\"requiredStaff\").that.is.an(\"array\").with.deep.members([\"80934020-8ada-47cb-9ae5-da7deeb74e9d\"]);\r",
									"        pm.expect(jsonData).to.have.property(\"duration\",\"1h\");\r",
									"\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Operation Type\",\r\n    \"requiredStaff\": [\"80934020-8ada-47cb-9ae5-da7deeb74e9d\"],\r\n    \"duration\": \"1h\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7252/api/operationtype",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7252",
							"path": [
								"api",
								"operationtype"
							]
						}
					},
					"response": []
				},
				{
					"name": "OperationType PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect([200, 404]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.test(\"Response has required fields\", function () {\r",
									"        const jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"id\");\r",
									"        pm.expect(jsonData).to.have.property(\"name\", \"Updated Operation Type\");\r",
									"        pm.expect(jsonData).to.have.property(\"requiredStaff\").that.is.an(\"array\").with.deep.members([\"80934020-8ada-47cb-9ae5-da7deeb74e9d\"]);\r",
									"        pm.expect(jsonData).to.have.property(\"duration\", \"2h\");\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"3414093c-b671-4f50-be2e-467d638adc1f\",\r\n    \"name\": \"Updated Operation Type\",\r\n    \"requiredStaff\": [\"80934020-8ada-47cb-9ae5-da7deeb74e9d\"],\r\n    \"duration\": \"2h\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7252/api/operationtype/3414093c-b671-4f50-be2e-467d638adc1f",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7252",
							"path": [
								"api",
								"operationtype",
								"3414093c-b671-4f50-be2e-467d638adc1f"
							]
						}
					},
					"response": []
				},
				{
					"name": "OperationType Soft Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect([200, 404]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.test(\"Response has required fields\", function () {\r",
									"        const jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"id\");\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Returns 404\", function () {\r",
									"        pm.response.to.have.status(404);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:7252/api/operationtype/40c69c4c-894c-4a45-93bc-f004322043d4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7252",
							"path": [
								"api",
								"operationtype",
								"40c69c4c-894c-4a45-93bc-f004322043d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "OperationType Hrad Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {\r",
									"    pm.expect([200, 404]).to.include(pm.response.code);\r",
									"});\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.test(\"Response has required fields\", function () {\r",
									"        const jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property(\"id\");\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Returns 404\", function () {\r",
									"        pm.response.to.have.status(404);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:7252/api/operationtype/40c69c4c-894c-4a45-93bc-f004322043d4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7252",
							"path": [
								"api",
								"operationtype",
								"40c69c4c-894c-4a45-93bc-f004322043d4"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}