{
	"info": {
		"_postman_id": "41ffd9a1-9790-4802-8565-661e3889d938",
		"name": "User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38922645"
	},
	"item": [
		{
			"name": "Get users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Response has expected properties\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
							"\r",
							"    const firstItem = jsonData[0];\r",
							"    pm.expect(firstItem).to.have.property(\"nif\");\r",
							"    pm.expect(firstItem).to.have.property(\"email\");\r",
							"    pm.expect(firstItem).to.have.property(\"userName\");\r",
							"    pm.expect(firstItem).to.have.property(\"phoneNumber\");\r",
							"    pm.expect(firstItem).to.have.property(\"role\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false,
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7252/api/user",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7252",
					"path": [
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"User is created\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.be.an('object');\r",
							"\r",
							"    pm.expect(jsonData).to.have.property(\"nif\");\r",
							"    pm.expect(jsonData).to.have.property(\"email\");\r",
							"    pm.expect(jsonData).to.have.property(\"userName\");\r",
							"    pm.expect(jsonData).to.have.property(\"phoneNumber\");\r",
							"    pm.expect(jsonData).to.have.property(\"role\");\r",
							"});\r",
							"\r",
							"/*pm.test(\"User is inactive\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
							"\r",
							"    const firstItem = jsonData[0];\r",
							"    pm.expect(jsonData).to.have.property('active', false);\r",
							"});\r",
							"*/\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nif\": \"211256390\",\r\n  \"email\": \"sem5pi2425g051@gmail.com\",\r\n  \"userName\": \"teste\",\r\n  \"phoneNumber\": \"917063405\",\r\n  \"role\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7252/api/user",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7252",
					"path": [
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirm User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Activation confirmation message received\", function () {\r",
							"    const responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include(\"Your account has been activated successfully\");\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Content-Type\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7252/api/user/confirm?nif=211256390",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7252",
					"path": [
						"api",
						"user",
						"confirm"
					],
					"query": [
						{
							"key": "nif",
							"value": "211256390"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"User details updated successfully\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    // Parse the request body to get the expected data\r",
							"    const requestBody = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"    // Ensure the response is an object and contains the updated details\r",
							"    pm.expect(jsonData).to.be.an('object');\r",
							"    pm.expect(jsonData).to.have.property(\"nif\", requestBody.nif);\r",
							"    pm.expect(jsonData).to.have.property(\"email\", requestBody.email);\r",
							"    pm.expect(jsonData).to.have.property(\"userName\", requestBody.userName);\r",
							"    pm.expect(jsonData).to.have.property(\"phoneNumber\", requestBody.phoneNumber);\r",
							"    pm.expect(jsonData).to.have.property(\"role\", requestBody.role);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Check for error when required fields are missing\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    if (pm.request.body.nif === \"\" || pm.request.body.email === \"\" || pm.request.body.userName === \"\") {\r",
							"        pm.expect(pm.response.code).to.equal(400);\r",
							"        pm.expect(jsonData).to.have.property(\"message\").that.includes(\"missing required fields\");\r",
							"    }\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"pm.test(\"Check for error with invalid email format\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    if (/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(pm.request.body.email)) {\r",
							"        pm.expect(pm.response.code).to.equal(400);\r",
							"        pm.expect(jsonData).to.have.property(\"message\").that.includes(\"invalid email format\");\r",
							"    }\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nif\": \"2233356390\",\r\n    \"email\": \"guipinto04@gmail.com\",\r\n    \"userName\": \"teste12\",\r\n    \"phoneNumber\": \"917063406\",\r\n    \"role\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7252/api/user/2233356390",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7252",
					"path": [
						"api",
						"user",
						"2233356390"
					]
				}
			},
			"response": []
		},
		{
			"name": "Soft Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7252/api/user/211256390",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7252",
					"path": [
						"api",
						"user",
						"211256390"
					]
				}
			},
			"response": []
		},
		{
			"name": "Hard Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7252/api/user/211256390/hard",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7252",
					"path": [
						"api",
						"user",
						"211256390",
						"hard"
					]
				}
			},
			"response": []
		}
	]
}